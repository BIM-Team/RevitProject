<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuFgoJbVWJ2CwVCeUq1ImwKdQ
        JuGkTyT4oE0k+J1LJOGZSiPAlUgjlJJGImCQRiElAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxV4rQMBdKpK+XzDPw3JJxdOc
        gMDlx7nO9Ofh5Pz6+Pf8+fj38ufh5N/FuM7DlX7ApWRFxZVMKM+PRiKSjUQiQAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0GUuIsxiLYbLaTjL2JRyv/Lc
        0tn/////////////////////////////////////////////////////6djQ2baEbL+VTy7LjUQhhopD
        ISIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANZpMUPTZzCz2YZcwfPb
        ztf///////7+/+rUyP/Xr5v/yJB1/7x6Wf+0akj/tGxK/7x9YP/Iln7/17Sj/+rXzv///v7//////+bU
        zNenbVLBjUQhs4pDIUMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADcbTVO2nA6v+al
        hMD//////////+XGt//Lj3H/s1wx/7NfNv+zYTn/s2I8/7FkPv+xZUD/sWdC/7FoRf+xakj/sWtI/8mb
        hP/kzcL///////////+8kHrAkEspv4pDIU4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4XA3Q+B0
        Pb/sspTC//////Xo4f/WoIX/t1wu/7VZLP+1XDD/tV4z/7NeNP+zXzb/smA3/7FhOf+xYjv/sGQ+/7Bm
        Qv+waEX/sGpI/7FwTv/SrZr/9Ovm///////EnYrCkEsqv4pDIUMAAAAAAAAAAAAAAAAAAAAAAAAAAOV1
        PCLiczmz7KmHwP/////x3tT/z4po/7hUIv+4Vyb/uFkr/7lbLf+3Wi3/tVos/7NZLP+yWSz/sFgu/69a
        L/+uWzP/rl43/65jPf+wZkL/r2hF/7BqR//JmoT/7+Lc//////+8j3rAjEQis4pDISIAAAAAAAAAAAAA
        AAAAAAAA5nc/huuTZsH/////9ujg/9GIZP+8UBz/vVUg/71XJf+8WCb/ulcm/7lVJP+2UyH/6+vr/93d
        3f/T09P/vYpx/6xOIv+rVCj/rFkw/61eN/+tYz7/rmdE/69oRf/ImIL/9Orm//////+oblLBjUQhhgAA
        AAAAAAAAAAAAAOl8RUDpgEzL+eDT1//////bnn//v1IZ/8BRG//CVR//wVci/8BVIf++Ux3/u1AZ/7hN
        F//39/f/6Ojo/9vb2/+/iG3/qkYU/6lIF/+oTB7/qVMo/6taM/+tYTz/rWVA/61mQ//QqJX//////+bU
        zNeVTy7LjEQhQAAAAAAAAAAA6n9JkvCog7//////68Wz/8ZZIf/EVRv/xlQa/8ZVHf/GVh7/wlMc/8JR
        Gv+/Thf/vEwV///////09PT/5OTk/8OJbf+tRA//qkMQ/6hDE/+nRxn/qFAk/6tZMf+sXzr/q2E9/61l
        Q//iyb3//////7eEbL+QRiKSAAAAAOqEUCXrhFHP+uTY2f/+/v/ZjWb/ylYe/8hWHP/KVhz/ylYd/8lW
        Hf/GUxv/xFIZ/8FPF/+/TRX/3KCC/9icf//NknT/vm1F/7FFD/+uQw//rEEO/6dDEv+nSBn/qFAl/6tZ
        Mv+rXTj/qmA7/8WSef///v7/6djQ2ZVMKM+PRiIl6odUYO2Xa8X/////8NLD/8xYH//NWR7/z1kf/89Z
        Hf/OVxz/zFgc/8pWG//IVBn/xlEX/8RQFv/SfVT/znpR/8Z0Sv+8Wyz/tkcQ/7JFD/+uRBD/q0EO/6hE
        E/+oSRv/qVMo/6pYMf+pXDX/qFw1/+fTyf//////pWRExZJHImDqiliU87iawP/////mrJD/z1sg/9Fb
        H//SWx//0Vsf/9FaHf/PWR3/zVcb/8pVGv/IVBj/xlIX///////8/Pz/5OTk/8SIav+5SRL/tkYQ/7JG
        D/+vRA//rEIP/6lGFv+pTSL/qlUr/6lYMP+oWTH/0qqX///////ClH7AlUkilOqMXMD42cnO/////92N
        Y//TXCH/1F0g/9RdIf/VXB//01we/9FaHv/PWBz/zVcb/8pVGv/IUxn////////////t7e3/ypyF/7xL
        Ev+5SRH/t0cR/7JFD/+uRA//rEQT/6pLG/+qUSX/qlQr/6dVLf/Ahmr//////9/EuM6YSiPA6o9h4fzv
        6eT/////2nZB/9ReI//WXyL/114g/9deIf/WXR//1Fsf/9FaHf/PWBz/zVcb/8pVGv/x0cL///////z8
        /P/d3d3/wG1D/7xLE/+5ShL/tkcR/7FGD/+uRRH/rEkY/6tOIf+pUCb/p1Io/7JpRf//////8ufh5JxL
        JOHqkmT4/vv69//////WZSv/1l8k/9lgI//ZXyL/2F4h/9heIP/WXCD/1Fsf/9JZHf/PWBz/zVcb/9yO
        Zv////////////T09P/T09P/vnpY/7xLE/+5SBL/tEYR/7FGEv+vSRb/rU0e/6pPIv+nTiT/p1Mq////
        ///8+fj3oE0k+OqUaPj+/Pr3/////9dnLP/XYST/2mAj/9pgIv/aYCP/2mAi/9heIf/WXR//1Fse/9Ja
        Hf/PWBz/zVYb/+CZdv////////////Dw8P/Pz8//vnpY/7tLEv+4SBH/tEcS/7JJFv+tSxv/qkwe/6dL
        Hv+mTyb///////z6+PekTyT46pZs4fzw6uT/////3HZE/9hhJP/aYST/22Ek/9thI//bYCP/2l8i/9hf
        If/WXSD/1Fse/9FZHf/PWBz/zVYb/+CZdv/79PD//////+fn5//Jycn/vnpY/7tKE/+2SRP/tEkV/69K
        GP+rShv/pkgZ/69gOf//////9Ofh5KhRJuHqmXDA+N3Pzv/////jkWb/2WIk/9lhJf/bYiT/3GIk/91i
        I//cYSL/2mAh/9heIP/WXSD/1Fwf/9JaHf/PWBz/zVYb/9V3SP/79PD/+/v7/9ra2v/FxcX/vmtC/7lL
        E/+1ShX/skoX/6xHF/+nRBX/vnpa///////lyLjOrFImwOqbdJTzw6vA/////+uwkv/ZYiX/2mMl/9ti
        Jf/dYiT/3WIk/91iI//cYSP/2l8i/9heIf/VXSD/01se/9JaHf/PWBz/zVcb/9V3SP//////6urq/9LS
        0v/El4H/vEwU/7dKFP+ySBP/q0MR/6VBD//Qn4f//////9OcgcCwVCeU6p54YO2qicX/////9dXF/9pj
        Jf/ZYiX/22Il/9xiJf/eYyX/4YBN/9+EVf/XlXT/04pk/9heIf/WXR//01se/9FaHf/QWBz/zVcb//HS
        wv/29vb/4ODg/8+xov++TRX/uUoT/7NHEv+sRBD/pkIQ/+bMv///////w3JJxbRWKGDqoHsl66F8z/vq
        4tn//v7/5pVs/9pjJv/ZYyX/3GMm/91jJf/xwKf/8vLy/+Hh4f/Q0ND/1204/9heIP/WXB//01sf/9Ja
        Hf/QWB3/+Ojh///////u7u7/17Ge/79PFv+6SxT/s0gT/69FEv/Ff13///7+//Lc0tm+Xy/PuFgoJQAA
        AADqoHuS8b6kv//////yyrb/22cs/9pjJf/ZYyX/22Il/+yhfP///////v7+/+vr6//awbX/2W45/9he
        IP/WXR//1Fse/+29pf////////////j4+P/Uj23/wE4X/7pMFv+zSRT/sEsZ/+LAr///////2JRyv8Bc
        KpIAAAAAAAAAAOqif0DrpYLL+ung1//////qqIb/2mMm/9pjJv/aYiX/3GMl//bVxf////////////v7
        +//u7u7/58/D/+vLuv/89PD/////////////////8dLC/8ZTGv/ATxj/ukwX/7RKFv/SmXz///////Pb
        ztfLajjLxF4rQAAAAAAAAAAAAAAAAOqif4bvtJfB//////rq4v/mlm3/2mMl/9pjJv/ZYyX/3Gw0//PL
        tv///////////////////////////////////////////+/Hs//NYCr/xFMa/8BRGP+6TRf/zYZi//Tm
        4P//////2oVbwcxjLYYAAAAAAAAAAAAAAAAAAAAA6qSCIuqifrPyxrDA//////ji1v/mlm3/2mMm/9pj
        Jv/ZYib/2WEl/+KMXv/yyrb/+uri////////////+enh//DItf/chlr/zFgd/8lWHP/FVBr/v1EZ/9GI
        ZP/x3dP//////+akg8DTZzCzz2QuIgAAAAAAAAAAAAAAAAAAAAAAAAAA6qSCQ+ulg7/0zLnC//////rq
        4v/qqIb/22cs/9pjJf/ZYiX/2GEl/9ZhJP/WXyP/1mAi/9RfIv/TXSH/0Vwh/85aIP/LVx//yFYe/8RY
        Iv/bnoD/9ujg///////sspTC2nA5v9ZpMUMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6qSCTuul
        hL/yxrDA///////////zyrb/5pVs/9pjJv/ZYiX/2GEk/9ZgJP/WYCP/1V8j/9NdIf/QWyH/zVkf/8pY
        Hf/YjGb/68Wy////////////7aqIwN9zPL/cbTROAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA6qSBQ+qifrPvtJfB+ung1////////v7/9dXF/+yxkv/kkWb/3XhE/9dnLP/WZiv/2XRB/92N
        ZP/mrI//8dLD///+/v//////+eDS1+qSZsHiczqz4XE4QwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA6qSCIuqifobrpYLL8b6lv/vq4tn/////////////////////////////
        ////////////////////////+uTY2fCog7/ogUzL5ng/huR0PCIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOqifkDqoHuS66F7z+2ricXzw6vA+N3Pzvzw
        6uT+/Pr3/vv69/zv6eT42cjO87iawO2Xa8XrhVHP6X9Ikul9RUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADqoHsl6p54YOqb
        dZTqmXHA6pZt4eqUaPjqkmX46o9g4eqNXMDqiViU6odUYOqEUCUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/8AD//8AAP/8AAA/+AAAH/AAAA/gAAAHwAAAA8AAAAOAAAABgAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAGAAAABwAAAA8AA
        AAPgAAAH8AAAD/gAAB/8AAA//wAA///AA/8=
</value>
  </data>
</root>